{"name":"Ops","tagline":"Rack application for versioning and heartbeat info","body":"Ops\r\n===\r\n\r\n[![Code Climate](https://codeclimate.com/github/primedia/ops.png)](https://codeclimate.com/github/primedia/ops)\r\n\r\nThis gem provides standardized support for obtaining version and heartbeat information from Sinatra or Rails-based web applications.\r\n\r\nTypical usage:\r\n\r\n```\r\n/ops/version      - displays version info as HTML\r\n/ops/version.json - displays version info as JSON\r\n/ops/heartbeat    - returns 'OK' if the app is alive\r\n```\r\n\r\nThis gem replaces the now-deprecated [ops_routes](https://github.com/primedia/ops_routes).\r\n\r\nInstallation\r\n------------\r\n\r\n### For Rails 3 apps:\r\n\r\n1. Add the gem to your project's Gemfile:\r\n    ```ruby\r\n    gem 'ops'\r\n    ```\r\n\r\n2. Add the following to application.rb:\r\n\r\n    ```ruby\r\n    Ops.setup do |config|\r\n      config.file_root = Rails.root\r\n      config.environment = Rails.env\r\n    end\r\n    ```\r\n\r\n3. mount the gem in routes.rb:\r\n\r\n    ```ruby\r\n    mount Ops.new, :at => \"/ops\"\r\n    ```\r\n\r\n### For Sinatra apps:\r\n\r\n1. Add the gem to your project's Gemfile:\r\n\r\n    ```ruby\r\n    gem 'ops'\r\n    ```\r\n\r\n2. Add the following to config.ru:\r\n\r\n    ```ruby\r\n    require 'ops'\r\n\r\n    #...\r\n\r\n    Ops.setup do |config|\r\n      config.file_root = File.dirname __FILE__\r\n      config.environment = ENV['RACK_ENV']\r\n    end\r\n\r\n    run Rack::URLMap.new \\\r\n      \"/\"    => YourAppClass,\r\n      \"/ops\" => Ops.new\r\n    ```\r\n\r\n    ```ruby\r\n    # Implementation within rack cascade:\r\n    run Rack::Cascade.new([\r\n      NewHomeGuide,\r\n      ListingSearch::App,\r\n      Ops.rack_app('/ops')\r\n    ])\r\n    ```\r\n\r\nAdding Custom Heartbeats\r\n------------------------\r\n\r\nAdditionally, you can specify custom heartbeat monitoring pages as follows:\r\n\r\n```ruby\r\nOps.add_heartbeat :mysql do\r\n  conn = ActiveRecord::Base.connection\r\n  migrations = conn.select_all(\"SELECT COUNT(1) FROM schema_migrations;\") \r\n  conn.disconnect!\r\nend\r\n```\r\n\r\nThe mysql example shown above would be accessed at ops/heartbeat/mysql. The heartbeat page will return a `200 ‘OK’` as long as the provided block returns true. If an error is raised, the heartbeat does not exist, or the block returns a falsey value, a `500` will be returned instead.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}